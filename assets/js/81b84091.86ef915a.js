"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5433],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),c=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,k=d["".concat(o,".").concat(m)]||d[m]||p[m]||s;return a?n.createElement(k,l(l({ref:t},u),{},{components:a})):n.createElement(k,l({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,l=new Array(s);l[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<s;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6760:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var n=a(7462),r=a(3366),s=(a(7294),a(3905)),l=["components"],i={title:"MultiCasskop",sidebar_label:"MultiCasskop"},o=void 0,c={unversionedId:"references/multicasskop",id:"references/multicasskop",title:"MultiCasskop",description:"MultiCasskop describes the desired state of the Cassandra cluster in a multi-site mode we want to setup through the operator.",source:"@site/docs/6_references/4_multicasskop.md",sourceDirName:"6_references",slug:"/references/multicasskop",permalink:"/casskop/docs/references/multicasskop",editUrl:"https://github.com/cscetbon/casskop/edit/master/website/docs/6_references/4_multicasskop.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"MultiCasskop",sidebar_label:"MultiCasskop"},sidebar:"docs",previous:{title:"Cassandra cluster Status",permalink:"/casskop/docs/references/cassandra_cluster_status"},next:{title:"Cassandra backup",permalink:"/casskop/docs/references/cassandra_backup"}},u={},p=[{value:"MultiCasskop",id:"multicasskop",level:2},{value:"MultiCasskopSpec",id:"multicasskopspec",level:2},{value:"MultiCasskopStatus",id:"multicasskopstatus",level:2}],d={toc:p};function m(e){var t=e.components,a=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"MultiCasskop")," describes the desired state of the Cassandra cluster in a multi-site mode we want to setup through the operator."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: db.orange.com/v2\nkind: MultiCasskop\nmetadata:\n name: multi-casskop-demo\nspec:\n deleteCassandraCluster: true\n base: #<-- Specify the base of our CassandraCluster\n   apiVersion: "db.orange.com/v2"\n   kind: "CassandraCluster"\n   metadata:\n     name: cassandra-demo\n     namespace: cassandra-demo\n     labels:\n       cluster: casskop\n   spec:\n     cassandraImage: cassandra:3.11\n     bootstrapImage: ghcr.io/cscetbon/casskop-bootstrap:0.1.4\n     configMapName: cassandra-configmap-v1\n     service:\n       annotations:\n         external-dns.alpha.kubernetes.io/hostname: casskop.external-dns-test.gcp.trycatchlearn.fr.\n     rollingPartition: 0\n     dataCapacity: "20Gi"\n     dataStorageClass: "standard-wait"\n     imagepullpolicy: IfNotPresent\n#      imagepullpolicy: Always\n     hardAntiAffinity: false\n     deletePVC: true\n     autoPilot: false\n     autoUpdateSeedList: false\n     debug: false\n     maxPodUnavailable: 1\n     nodesPerRacks: 1\n     runAsUser: 999\n     resources:\n       limits:\n         cpu: \'1\'\n         memory: 2Gi\n   status:\n     seedlist:   #<-- at this time the seedlist must be fullfilled manually with known predictive name of pods\n       - cassandra-demo-dc1-rack1-0.casskop.external-dns-test.gcp.trycatchlearn.fr\n       - cassandra-demo-dc3-rack3-0.casskop.external-dns-test.gcp.trycatchlearn.fr\n       - cassandra-demo-dc4-rack4-0.casskop.external-dns-test.gcp.trycatchlearn.fr\n       - cassandra-demo-dc4-rack4-1.casskop.external-dns-test.gcp.trycatchlearn.fr\n override: #<-- Specify overrides of the CassandraCluster depending on the target kubernetes cluster\n   gke-master-west1-b:\n     spec:\n       topology:\n         dc:\n           - name: dc1\n             nodesPerRacks: 1\n             config:\n               cassandra-yaml:\n                 num_tokens: 256\n             labels:\n               failure-domain.beta.kubernetes.io/region: europe-west1\n             rack:\n               - name: rack1\n                 rollingPartition: 0\n                 labels:\n                   failure-domain.beta.kubernetes.io/zone: europe-west1-b\n   gke-slave-west1-d:\n     spec:\n       imagepullpolicy: IfNotPresent\n       topology:\n         dc:\n           - name: dc3\n             nodesPerRacks: 1\n             config:\n               cassandra-yaml:\n                 num_tokens: 256\n             labels:\n               failure-domain.beta.kubernetes.io/region: europe-west1\n             rack:\n               - name: rack3\n                 labels:\n                   failure-domain.beta.kubernetes.io/zone: europe-west1-d\n           - name: dc4\n             nodesPerRacks: 2\n             config:\n               cassandra-yaml:\n                 num_tokens: 256\n             labels:\n               failure-domain.beta.kubernetes.io/region: europe-west1\n             rack:\n               - name: rack4\n                 labels:\n                   failure-domain.beta.kubernetes.io/zone: europe-west1-d\n')),(0,s.kt)("h2",{id:"multicasskop"},"MultiCasskop"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Field"),(0,s.kt)("th",{parentName:"tr",align:null},"Type"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"),(0,s.kt)("th",{parentName:"tr",align:null},"Required"),(0,s.kt)("th",{parentName:"tr",align:null},"Default"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"metadata"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://godoc.org/k8s.io/apimachinery/pkg/apis/meta/v1#ObjectMeta"},"ObjectMetadata")),(0,s.kt)("td",{parentName:"tr",align:null},"is metadata that all persisted resources must have, which includes all objects users must create."),(0,s.kt)("td",{parentName:"tr",align:null},"No"),(0,s.kt)("td",{parentName:"tr",align:null},"nil")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"spec"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#multicasskopspec"},"MultiCasskopSpec")),(0,s.kt)("td",{parentName:"tr",align:null},"defines the desired state of MultiCasskop."),(0,s.kt)("td",{parentName:"tr",align:null},"No"),(0,s.kt)("td",{parentName:"tr",align:null},"nil")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"status"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#multicasskopstatus"},"MultiCasskopStatus")),(0,s.kt)("td",{parentName:"tr",align:null},"defines the observed state of MultiCasskop."),(0,s.kt)("td",{parentName:"tr",align:null},"No"),(0,s.kt)("td",{parentName:"tr",align:null},"nil")))),(0,s.kt)("h2",{id:"multicasskopspec"},"MultiCasskopSpec"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Field"),(0,s.kt)("th",{parentName:"tr",align:null},"Type"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"),(0,s.kt)("th",{parentName:"tr",align:null},"Required"),(0,s.kt)("th",{parentName:"tr",align:null},"Default"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"deleteCassandraCluster"),(0,s.kt)("td",{parentName:"tr",align:null},"bool"),(0,s.kt)("td",{parentName:"tr",align:null},"If you have set to true, then when deleting the ",(0,s.kt)("inlineCode",{parentName:"td"},"MultiCassKop")," object, it will cascade the deletion of the ",(0,s.kt)("inlineCode",{parentName:"td"},"CassandraCluster")," object in the targeted k8s clusters. Then each local CassKop will delete their Cassandra clusters."),(0,s.kt)("td",{parentName:"tr",align:null},"Yes"),(0,s.kt)("td",{parentName:"tr",align:null},"true")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"base"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/casskop/docs/references/cassandra_cluster#cassandracluster"},"CassandraCluster")),(0,s.kt)("td",{parentName:"tr",align:null},"Define for all ",(0,s.kt)("inlineCode",{parentName:"td"},"CassandraCluster")," the default configuration"),(0,s.kt)("td",{parentName:"tr",align:null},"Yes"),(0,s.kt)("td",{parentName:"tr",align:null},"-")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"override"),(0,s.kt)("td",{parentName:"tr",align:null},"map","[","string","]",(0,s.kt)("a",{parentName:"td",href:"/casskop/docs/references/cassandra_cluster#cassandracluster"},"CassandraCluster")),(0,s.kt)("td",{parentName:"tr",align:null},"Define for each ",(0,s.kt)("inlineCode",{parentName:"td"},"CassandraCluster")," a specific configuration not shared across all of them"),(0,s.kt)("td",{parentName:"tr",align:null},"Yes"),(0,s.kt)("td",{parentName:"tr",align:null},"-")))),(0,s.kt)("h2",{id:"multicasskopstatus"},"MultiCasskopStatus"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Field"),(0,s.kt)("th",{parentName:"tr",align:null},"Type"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"),(0,s.kt)("th",{parentName:"tr",align:null},"Required"),(0,s.kt)("th",{parentName:"tr",align:null},"Default")))))}m.isMDXComponent=!0}}]);