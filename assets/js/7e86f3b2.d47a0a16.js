"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4741],{3905:function(e,t,a){a.d(t,{Zo:function(){return l},kt:function(){return k}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),p=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},l=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(a),k=n,h=d["".concat(i,".").concat(k)]||d[k]||u[k]||s;return a?r.createElement(h,o(o({ref:t},l),{},{components:a})):r.createElement(h,o({ref:t},l))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,o=new Array(s);o[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var p=2;p<s;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2239:function(e,t,a){a.r(t),a.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return k},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var r=a(7462),n=a(3366),s=(a(7294),a(3905)),o=["components"],c={title:"Backup and restore",sidebar_label:"Backup and restore"},i=void 0,p={unversionedId:"operations/backup_restore",id:"operations/backup_restore",title:"Backup and restore",description:"Tip: For a full working example step by step, please check also this well written article. This also explain more deeply how Casskop Backup & Restore works in background",source:"@site/docs/5_operations/3_backup_restore.md",sourceDirName:"5_operations",slug:"/operations/backup_restore",permalink:"/casskop/docs/operations/backup_restore",editUrl:"https://github.com/cscetbon/casskop/edit/master/website/docs/5_operations/3_backup_restore.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Backup and restore",sidebar_label:"Backup and restore"},sidebar:"docs",previous:{title:"Multi-CassKop",permalink:"/casskop/docs/operations/multi_casskop"},next:{title:"Upgrade Operator",permalink:"/casskop/docs/operations/upgrade_operator"}},l={},u=[{value:"Backup",id:"backup",level:2},{value:"Supported storage",id:"supported-storage",level:3},{value:"Life cycle of the CassandraBackup object",id:"life-cycle-of-the-cassandrabackup-object",level:3},{value:"Restore",id:"restore",level:2},{value:"Rename",id:"rename",level:3},{value:"Entities",id:"entities",level:3},{value:"Datacenter",id:"datacenter",level:3}],d={toc:u};function k(e){var t=e.components,a=(0,n.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Tip"),": For a full working example step by step, please check also this ",(0,s.kt)("a",{parentName:"p",href:"https://cscetbon.medium.com/casskop-1-0-1-backup-and-restore-ba92f01c00df"},"well written article"),". This also explain more deeply how Casskop Backup & Restore works in background"),(0,s.kt)("p",null,"In order to provide Backup/Restore abilities we use InstaCluster's ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/instaclustr/cassandra-sidecar"},"cassandra-sidecar project")," and add it to each Cassandra node to spawn. We want to thant Instaclustr for the modifications they made to make it work with CassKop!"),(0,s.kt)("h2",{id:"backup"},"Backup"),(0,s.kt)("p",null,"It is possible to backup keyspaces or tables from a cluster managed by Casskop. To start or schedule a backup, you\ncreate an object of type ",(0,s.kt)("a",{parentName:"p",href:"/casskop/docs/references/cassandra_backup"},"CassandraBackup"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: db.orange.com/v2\nkind: CassandraBackup\nmetadata:\n  name: nightly-cassandra-backup\n  labels:\n    app: cassandra\nspec:\n  cassandraCluster: test-cluster\n  datacenter: dc1\n  storageLocation: s3://cassie\n  snapshotTag: SnapshotTag2\n  secret: cloud-backup-secrets\n  schedule: "@midnight"\n  entities: k1.t1,k2.t3\n')),(0,s.kt)("p",null,"If there is no schedule defined, the backup will start as soon as it's created and won't be start again with that object.\nYou can always delete the object and recreate it though."),(0,s.kt)("h3",{id:"supported-storage"},"Supported storage"),(0,s.kt)("p",null,"The following storage options for storing the backups are:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"s3 (as in the example above)"),(0,s.kt)("li",{parentName:"ul"},"gcp"),(0,s.kt)("li",{parentName:"ul"},"azure"),(0,s.kt)("li",{parentName:"ul"},"oracle cloud")),(0,s.kt)("p",null,"More details can be found on ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/instaclustr/cassandra-backup"},"Instaclustr's Cassandra backup page")),(0,s.kt)("h3",{id:"life-cycle-of-the-cassandrabackup-object"},"Life cycle of the CassandraBackup object"),(0,s.kt)("p",null,"When this object gets created, CassKop does a few checks to ensure:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The specified Cassandra cluster exists"),(0,s.kt)("li",{parentName:"ul"},"If there is a secret that it has the expected parameters depending on the chosen backend"),(0,s.kt)("li",{parentName:"ul"},"If there is a schedule that its format is correct (",(0,s.kt)("a",{parentName:"li",href:"https://godoc.org/gopkg.in/robfig/cron.v3#hdr-CRON_Expression_Format"},"Cron expressions"),",\n",(0,s.kt)("a",{parentName:"li",href:"https://godoc.org/gopkg.in/robfig/cron.v3#hdr-Predefined_schedules"},"Predefined schedules")," or ",(0,s.kt)("a",{parentName:"li",href:"https://godoc.org/gopkg.in/robfig/cron.v3#hdr-Intervals"},"Intervals"),")")),(0,s.kt)("p",null,"Then, if all those checks pass, it triggers the backup if there is no schedule, or creates a Cron task with the specified schedule."),(0,s.kt)("p",null,"When this object gets deleted, if there is a scheduled task, it is unscheduled."),(0,s.kt)("p",null,"When this object gets updated, and the change is located in the spec section, CassKop unschedules the existing task and schedules a new one with the new parameters provided."),(0,s.kt)("h2",{id:"restore"},"Restore"),(0,s.kt)("p",null,"Following the same logic, a ",(0,s.kt)("a",{parentName:"p",href:"/casskop/docs/references/cassandra_restore"},"CassandraRestore")," object must be created to trigger a restore, and it must refer to an\nexisting ",(0,s.kt)("a",{parentName:"p",href:"/casskop/docs/references/cassandra_backup"},"CassandraBackup")," object in K8S:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: db.orange.com/v2\nkind: CassandraRestore\nmetadata:\n  name: nightly-cassandra-backup\n  labels:\n    app: cassandra\nspec:\n  cassandraBackup: nightly-cassandra-backup\n  cassandraCluster: test-cluster\n  entities: k1.t1\n")),(0,s.kt)("h3",{id:"rename"},"Rename"),(0,s.kt)("p",null,"It's possible to restore the content of tables into other existing tables. Here is an example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: db.orange.com/v2\nkind: CassandraRestore\nmetadata:\n  name: nightly-cassandra-backup\n  labels:\n    app: cassandra\nspec:\n  cassandraBackup: nightly-cassandra-backup\n  cassandraCluster: test-cluster\n  entities: k1.t1\n  rename:\n    k1.t1: k1.t2\n")),(0,s.kt)("p",null,"With the object above, table k1.t1 will be restored under k1.t2 using the backup nightly-cassandra-backup"),(0,s.kt)("h3",{id:"entities"},"Entities"),(0,s.kt)("p",null,"In the restore phase, you can specify a subset of the entities specified in the backup. For instance, you can backup 2\ntables and only restore one."),(0,s.kt)("h3",{id:"datacenter"},"Datacenter"),(0,s.kt)("p",null,"It can be specified in a backup or a restore and declares where data must be backed up or restored. If not specified it\nwill run everywhere and entities must exist if they're specified. Specifying it in a restore will declare where data\nwill be restored but as icarus truncates entities it restores, it won't prevent the truncate from cleaning data in non\nchosen datacenters."))}k.isMDXComponent=!0}}]);